package delphos.iu;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.swing.AbstractButton;
import javax.swing.BorderFactory;
import javax.swing.BoxLayout;
import javax.swing.DefaultComboBoxModel;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.LayoutStyle.ComponentPlacement;

import org.hibernate.Query;
import org.hibernate.Session;

import delphos.Documento_Clasificacion;
import delphos.Licitacion_Localizacion;
import delphos.Licitacion_Sector;
import delphos.Patente_Localizacion;
import delphos.Patente_Sector;
import delphos.Tendencia;

public class PanelTendenciasEditor extends javax.swing.JPanel implements ActionListener, DelphosSelectionListener {

	// Variables declaration - do not modify
	private javax.swing.JCheckBox cbDocs;
	private javax.swing.JCheckBox cbLicitaciones;
	private javax.swing.JCheckBox cbPatentes;
	private javax.swing.JCheckBox jCheckBox1;
	private javax.swing.JCheckBox jCheckBox2;
	private javax.swing.JCheckBox jCheckBox3;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel10;
	private javax.swing.JLabel jLabel13;
	private javax.swing.JLabel jLabel14;
	private javax.swing.JLabel jLabel15;
	private javax.swing.JLabel jLabel16;
	private javax.swing.JLabel jLabel17;
	private javax.swing.JLabel jLabel18;
	private javax.swing.JLabel jLabel19;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel20;
	private javax.swing.JLabel jLabel21;
	private javax.swing.JLabel jLabel22;
	private javax.swing.JLabel jLabel23;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabelLicitacionTipo;
	protected javax.swing.JComboBox jcbLicitacionTipo;
	//private javax.swing.JLabel jLabel8;
	private javax.swing.JLabel jLabel9;
	private javax.swing.JTextField jtfDocumentoAutor;
	private javax.swing.JTextField jtfDocumentoEntidad;
	private javax.swing.JButton jbtnAnadir;
	private javax.swing.JButton jbtnEliminar;
	private javax.swing.JButton jbtnLimpiar;
	private javax.swing.JPanel jpanelDocs;
	private javax.swing.JPanel jpanelLicitaciones;
	private javax.swing.JPanel jpanelPatentes;
	private javax.swing.JPanel panelTendencias;
	protected javax.swing.JScrollPane jsPane1Tendencias;
	private javax.swing.JTextField jtfTerminoPrincipal;
	private javax.swing.JTextField jtfLicitacionEntidadSolicitante;
	private javax.swing.JTextField jtfIncDecUltimoMes;
	private javax.swing.JTextField jtfIncDecUltimos3Meses;
	private javax.swing.JTextField jtfIncDecUltimos6Meses;
	private javax.swing.JTextField jtfPatentesInventor;
	private javax.swing.JTextField jtfPatentesSolicitante;
	private javax.swing.JTextField jtfRelacionados;
	private javax.swing.JTextField jtfIncDecUltimoAnio;
	private javax.swing.ButtonGroup bgTendencias;
	protected DelphosSelectionTreeDialog<Licitacion_Sector> dstdLicitacionSector;
	protected DelphosSelectionTreeDialog<Licitacion_Localizacion> dstdLicitacionLocalizacion;
	protected DelphosSelectionListDialog<Patente_Localizacion> dsldPatenteLocalizacion;
	protected DelphosSelectionTreeDialog<Patente_Sector> dstdPatenteSector;
	protected DelphosSelectionTreeDialog<Documento_Clasificacion> dstdDocumentoClasificacion;
	protected JButton btnLicitacionSectores;
	protected JButton btnLicitacionLocalizacion;
	protected JButton btnPatenteLocalizacion;
	protected JButton btnPatenteSectores;
	protected JButton btnDocumentoClasificacion;
	protected JLabel lblLicitacionSectores;
	protected JLabel lblLicitacionLocalizacion;
	protected JLabel lblPatenteLocalizacion;
	protected JLabel lblPatenteSectores;
	protected JLabel lblDocumentoClasificacion;
	protected Set<Licitacion_Sector> licitacionSectores = new HashSet<>();
	protected Set<Patente_Localizacion> patenteLocalizacion = new HashSet<>();
	protected Set<Licitacion_Localizacion> licitacionLocalizacion = new HashSet<>();
	protected Set<Patente_Sector> patenteSectores = new HashSet<>();
	protected Set<Patente_Sector> documentoClasificacion = new HashSet<>();
	
	private PanelTendencias panelPadre;
	// End of variables declaration

	/**
	 * Creates new form PanelEditorListadoTendencias
	 */
	public PanelTendenciasEditor(PanelTendencias panelPadre) {
		this.panelPadre = panelPadre;
		initComponents();
		cargarTendencias();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jtfTerminoPrincipal = new javax.swing.JTextField();
		jLabel3 = new javax.swing.JLabel();
		jtfRelacionados = new javax.swing.JTextField();
		jpanelLicitaciones = new javax.swing.JPanel();
		cbLicitaciones = new javax.swing.JCheckBox();
		btnLicitacionSectores = new javax.swing.JButton();
		lblLicitacionSectores = new javax.swing.JLabel();
		btnLicitacionLocalizacion = new javax.swing.JButton();
		lblLicitacionLocalizacion = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		jLabelLicitacionTipo = new javax.swing.JLabel();
		jcbLicitacionTipo = new javax.swing.JComboBox();
		jtfLicitacionEntidadSolicitante = new javax.swing.JTextField();
		jpanelPatentes = new javax.swing.JPanel();
		cbPatentes = new javax.swing.JCheckBox();
		btnPatenteSectores = new javax.swing.JButton();
		lblPatenteSectores = new javax.swing.JLabel();
		btnPatenteLocalizacion = new javax.swing.JButton();
		lblPatenteLocalizacion = new javax.swing.JLabel();
		jLabel9 = new javax.swing.JLabel();
		jtfPatentesInventor = new javax.swing.JTextField();
		jLabel10 = new javax.swing.JLabel();
		jtfPatentesSolicitante = new javax.swing.JTextField();
		jpanelDocs = new javax.swing.JPanel();
		cbDocs = new javax.swing.JCheckBox();
		jCheckBox1 = new javax.swing.JCheckBox();
		jCheckBox2 = new javax.swing.JCheckBox();
		jCheckBox3 = new javax.swing.JCheckBox();
		btnDocumentoClasificacion = new javax.swing.JButton();
		lblDocumentoClasificacion = new javax.swing.JLabel();
		jLabel13 = new javax.swing.JLabel();
		jtfDocumentoAutor = new javax.swing.JTextField();
		jLabel14 = new javax.swing.JLabel();
		jtfDocumentoEntidad = new javax.swing.JTextField();
		jLabel15 = new javax.swing.JLabel();
		jLabel16 = new javax.swing.JLabel();
		jtfIncDecUltimoMes = new javax.swing.JTextField();
		jLabel17 = new javax.swing.JLabel();
		jtfIncDecUltimos3Meses = new javax.swing.JTextField();
		jLabel18 = new javax.swing.JLabel();
		jLabel19 = new javax.swing.JLabel();
		jLabel20 = new javax.swing.JLabel();
		jtfIncDecUltimos6Meses = new javax.swing.JTextField();
		jLabel21 = new javax.swing.JLabel();
		jtfIncDecUltimoAnio = new javax.swing.JTextField();
		jLabel22 = new javax.swing.JLabel();
		jLabel23 = new javax.swing.JLabel();
		jbtnAnadir = new javax.swing.JButton();
		panelTendencias = new javax.swing.JPanel();
		jsPane1Tendencias = new javax.swing.JScrollPane(panelTendencias);
		jbtnEliminar = new javax.swing.JButton();
		jbtnLimpiar = new javax.swing.JButton();
		bgTendencias = new javax.swing.ButtonGroup();
		
		dstdLicitacionSector = new DelphosSelectionTreeDialog<Licitacion_Sector>(Licitacion_Sector.class, this);
		dstdLicitacionLocalizacion = new DelphosSelectionTreeDialog<Licitacion_Localizacion>(Licitacion_Localizacion.class, this);
		dstdPatenteSector = new DelphosSelectionTreeDialog<Patente_Sector>(Patente_Sector.class, this);
		dsldPatenteLocalizacion = new DelphosSelectionListDialog<Patente_Localizacion>(Patente_Localizacion.class, this);
		dstdDocumentoClasificacion = new DelphosSelectionTreeDialog<Documento_Clasificacion>(Documento_Clasificacion.class, this);
		
		jLabel1.setBackground(new java.awt.Color(153, 153, 153));
		jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel1.setText("Editar listado Tendencias");
		jLabel1.setOpaque(true);

		jLabel2.setText("Término Principal:");

		jLabel3.setText("Relacionados:");

		jpanelLicitaciones.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 255), 2));

		cbLicitaciones.setText("LICITACIONES");

		btnLicitacionSectores.setText("Sectores:");
		btnLicitacionSectores.addActionListener(this);
		this.lblLicitacionSectores.setFont(new Font("Dialog", Font.PLAIN, 12));
		this.lblLicitacionSectores.setBackground(Color.WHITE);
		this.lblLicitacionSectores.setOpaque(true);
		this.lblLicitacionSectores.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.LIGHT_GRAY), BorderFactory.createEmptyBorder(3, 5, 3, 5)));
		this.lblLicitacionSectores.setText("Todos");

		btnLicitacionLocalizacion.setText("País:");
		btnLicitacionLocalizacion.addActionListener(this);
		this.lblLicitacionLocalizacion.setFont(new Font("Dialog", Font.PLAIN, 12));
		this.lblLicitacionLocalizacion.setBackground(Color.WHITE);
		this.lblLicitacionLocalizacion.setOpaque(true);
		this.lblLicitacionLocalizacion.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.LIGHT_GRAY), BorderFactory.createEmptyBorder(3, 5, 3, 5)));
		this.lblLicitacionLocalizacion.setText("Todos");

		jLabelLicitacionTipo.setText("Tipo:");
		jcbLicitacionTipo.setModel(this.getListaTipoLicitacion());
		jLabel6.setText("Entidad Solicitante:");

		javax.swing.GroupLayout jpanelLicitacionesLayout = new javax.swing.GroupLayout(jpanelLicitaciones);
		jpanelLicitacionesLayout.setHorizontalGroup(jpanelLicitacionesLayout.createParallelGroup(Alignment.LEADING).addGroup(
				jpanelLicitacionesLayout
						.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								jpanelLicitacionesLayout
										.createParallelGroup(Alignment.LEADING)
										.addGroup(
												jpanelLicitacionesLayout.createSequentialGroup().addGap(21).addComponent(btnLicitacionSectores).addPreferredGap(ComponentPlacement.RELATED).addComponent(lblLicitacionSectores, 0, 167, Short.MAX_VALUE).addPreferredGap(ComponentPlacement.UNRELATED).addComponent(btnLicitacionLocalizacion).addPreferredGap(ComponentPlacement.RELATED).addComponent(lblLicitacionLocalizacion, 0, 167, Short.MAX_VALUE).addPreferredGap(ComponentPlacement.UNRELATED)
														.addComponent(jLabelLicitacionTipo)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
														.addComponent(jcbLicitacionTipo, 0, 121, Short.MAX_VALUE)
														.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
														.addComponent(jLabel6).addPreferredGap(ComponentPlacement.RELATED).addComponent(jtfLicitacionEntidadSolicitante, 159, 159, 159)).addGroup(jpanelLicitacionesLayout.createSequentialGroup().addComponent(cbLicitaciones).addGap(0, 777, Short.MAX_VALUE))).addContainerGap()));
		jpanelLicitacionesLayout.setVerticalGroup(jpanelLicitacionesLayout.createParallelGroup(Alignment.LEADING).addGroup(
				jpanelLicitacionesLayout
						.createSequentialGroup()
						.addContainerGap()
						.addComponent(cbLicitaciones)
						.addPreferredGap(ComponentPlacement.UNRELATED)
						.addGroup(
								jpanelLicitacionesLayout.createParallelGroup(Alignment.BASELINE).addComponent(btnLicitacionSectores).addComponent(lblLicitacionSectores, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE).addComponent(btnLicitacionLocalizacion).addComponent(lblLicitacionLocalizacion, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
								.addComponent(jLabelLicitacionTipo)
                    .addComponent(jcbLicitacionTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
										.addComponent(jtfLicitacionEntidadSolicitante, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)).addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
		jpanelLicitaciones.setLayout(jpanelLicitacionesLayout);

		jpanelPatentes.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 255, 0), 2));

		cbPatentes.setText("PATENTES");
		cbPatentes.addActionListener(this);

		btnPatenteSectores.setText("Sectores:");
		btnPatenteSectores.addActionListener(this);
		this.lblPatenteSectores.setFont(new Font("Dialog", Font.PLAIN, 12));
		this.lblPatenteSectores.setBackground(Color.WHITE);
		this.lblPatenteSectores.setOpaque(true);
		this.lblPatenteSectores.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.LIGHT_GRAY), BorderFactory.createEmptyBorder(3, 5, 3, 5)));
		this.lblPatenteSectores.setText("Todos");

		btnPatenteLocalizacion.setText("País:");
		btnPatenteLocalizacion.addActionListener(this);
		this.lblPatenteLocalizacion.setFont(new Font("Dialog", Font.PLAIN, 12));
		this.lblPatenteLocalizacion.setBackground(Color.WHITE);
		this.lblPatenteLocalizacion.setOpaque(true);
		this.lblPatenteLocalizacion.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.LIGHT_GRAY), BorderFactory.createEmptyBorder(3, 5, 3, 5)));
		this.lblPatenteLocalizacion.setText("Todos");

		jLabel9.setText("Inventor:");

		jLabel10.setText("Solicitante:");

		javax.swing.GroupLayout jpanelPatentesLayout = new javax.swing.GroupLayout(jpanelPatentes);
		jpanelPatentes.setLayout(jpanelPatentesLayout);
		jpanelPatentesLayout.setHorizontalGroup(jpanelPatentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jpanelPatentesLayout
						.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								jpanelPatentesLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(
												jpanelPatentesLayout.createSequentialGroup().addGap(21, 21, 21).addComponent(btnPatenteSectores).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(lblPatenteSectores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(btnPatenteLocalizacion).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(lblPatenteLocalizacion, 0, 167, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel9).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jtfPatentesInventor).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel10).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(jtfPatentesSolicitante)).addGroup(jpanelPatentesLayout.createSequentialGroup().addComponent(cbPatentes).addGap(0, 0, Short.MAX_VALUE))).addContainerGap()));
		jpanelPatentesLayout.setVerticalGroup(jpanelPatentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jpanelPatentesLayout
						.createSequentialGroup()
						.addContainerGap()
						.addComponent(cbPatentes)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(
								jpanelPatentesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btnPatenteSectores).addComponent(lblPatenteSectores, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(btnPatenteLocalizacion).addComponent(lblPatenteLocalizacion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel9)
										.addComponent(jtfPatentesInventor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel10).addComponent(jtfPatentesSolicitante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

		jpanelDocs.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 2));

		cbDocs.setText("DOCUMENTOS ACADÉMICOS");

		jCheckBox1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
		jCheckBox1.setText("Tesis");

		jCheckBox2.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
		jCheckBox2.setText("Artículos");
		jCheckBox2.addActionListener(this);

		jCheckBox3.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
		jCheckBox3.setText("Congresos");
		jCheckBox3.addActionListener(this);
		
		btnDocumentoClasificacion.setText("Clasificación:");
		btnDocumentoClasificacion.addActionListener(this);
		this.lblDocumentoClasificacion.setFont(new Font("Dialog", Font.PLAIN, 12));
		this.lblDocumentoClasificacion.setBackground(Color.WHITE);
		this.lblDocumentoClasificacion.setOpaque(true);
		this.lblDocumentoClasificacion.setBorder(BorderFactory.createCompoundBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.LIGHT_GRAY), BorderFactory.createEmptyBorder(3, 5, 3, 5)));
		this.lblDocumentoClasificacion.setText("Todos");

		jLabel13.setText("Autor:");

		jLabel14.setText("Entidad:");

		javax.swing.GroupLayout jpanelDocsLayout = new javax.swing.GroupLayout(jpanelDocs);
		jpanelDocs.setLayout(jpanelDocsLayout);
		jpanelDocsLayout.setHorizontalGroup(jpanelDocsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jpanelDocsLayout
						.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								jpanelDocsLayout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(cbDocs)
										.addGroup(
												jpanelDocsLayout
														.createSequentialGroup()
														.addGap(21, 21, 21)
														.addGroup(jpanelDocsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jCheckBox1).addComponent(btnDocumentoClasificacion))
														.addGap(18, 18, 18)
														.addGroup(
																jpanelDocsLayout
																		.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																		.addGroup(jpanelDocsLayout.createSequentialGroup().addComponent(jCheckBox2).addGap(18, 18, 18).addComponent(jCheckBox3).addGap(0, 0, Short.MAX_VALUE))
																		.addGroup(
																				jpanelDocsLayout.createSequentialGroup().addComponent(lblDocumentoClasificacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel13).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jtfDocumentoAutor).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel14).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jtfDocumentoEntidad))))).addContainerGap()));
		jpanelDocsLayout.setVerticalGroup(jpanelDocsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				jpanelDocsLayout
						.createSequentialGroup()
						.addContainerGap()
						.addComponent(cbDocs)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(jpanelDocsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jCheckBox1).addComponent(jCheckBox2).addComponent(jCheckBox3))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(
								jpanelDocsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(btnDocumentoClasificacion).addComponent(lblDocumentoClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel13)
										.addComponent(jtfDocumentoAutor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel14).addComponent(jtfDocumentoEntidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addContainerGap(19, Short.MAX_VALUE)));

		jLabel15.setText("Incremento/Decrecimiento:");

		jLabel16.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
		jLabel16.setText("El último mes:");

		jLabel17.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
		jLabel17.setText("Los últimos 3 meses:");

		jLabel18.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
		jLabel18.setText("%");

		jLabel19.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
		jLabel19.setText("%");

		jLabel20.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
		jLabel20.setText("Los últimos 6 meses:");

		jLabel21.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
		jLabel21.setText("Último año:");

		jLabel22.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
		jLabel22.setText("%");

		jLabel23.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
		jLabel23.setText("%");

		jbtnAnadir.setText("Añadir");
		jbtnAnadir.addActionListener(this);

		jbtnLimpiar.setText("Limpiar");
		jbtnLimpiar.addActionListener(this);

		jbtnEliminar.setForeground(new java.awt.Color(255, 51, 51));
		jbtnEliminar.setText("Eliminar");
		jbtnEliminar.addActionListener(this);

		panelTendencias.setLayout(new BoxLayout(panelTendencias, BoxLayout.Y_AXIS));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addGroup(
						layout.createSequentialGroup()
								.addContainerGap()
								.addGroup(
										layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addComponent(jpanelLicitaciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addGroup(layout.createSequentialGroup().addComponent(jLabel2).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jtfTerminoPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jLabel3).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jtfRelacionados))
												.addComponent(jpanelPatentes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(jpanelDocs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addGroup(
														layout.createSequentialGroup()
																.addComponent(jLabel15)
																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(jLabel16)
																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(jtfIncDecUltimoMes, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(jLabel18)
																.addGap(18, 18, 18)
																.addComponent(jLabel17)
																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(jtfIncDecUltimos3Meses, javax.swing.GroupLayout.DEFAULT_SIZE, 51, Short.MAX_VALUE)
																.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																.addComponent(jLabel19)
																.addGap(18, 18, 18)
																.addGroup(
																		layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
																				.addGroup(layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE).addComponent(jbtnEliminar).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jbtnLimpiar).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jbtnAnadir))
																				.addGroup(
																						layout.createSequentialGroup().addComponent(jLabel20).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jtfIncDecUltimos6Meses, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel22).addGap(18, 18, 18).addComponent(jLabel21)
																								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jtfIncDecUltimoAnio, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED).addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))))).addContainerGap())
				.addComponent(jsPane1Tendencias, javax.swing.GroupLayout.Alignment.TRAILING));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup()
						.addComponent(jLabel1)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(jtfTerminoPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel3).addComponent(jtfRelacionados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jpanelLicitaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jpanelPatentes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jpanelDocs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addGroup(
								layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel15).addComponent(jLabel16).addComponent(jtfIncDecUltimoMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel17).addComponent(jtfIncDecUltimos3Meses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(jLabel18).addComponent(jLabel19).addComponent(jLabel20).addComponent(jtfIncDecUltimos6Meses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel21).addComponent(jtfIncDecUltimoAnio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addComponent(jLabel22).addComponent(jLabel23))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jbtnAnadir).addComponent(jbtnEliminar).addComponent(jbtnLimpiar)).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED).addComponent(jsPane1Tendencias, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)));
	}// </editor-fold>

	private void cbPatentesActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void jcbPatentesSectoresActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	public void cargarTendencias() {
		System.out.println("Cargando Tendencias");
		panelTendencias.removeAll();
		ArrayList<Tendencia> listaTendencias = (ArrayList<Tendencia>) Delphos.getSession().createQuery("FROM Tendencia").list();
		for (Tendencia tendencia : listaTendencias) {
			RadioButtonTendencia rb = new RadioButtonTendencia(tendencia);
			rb.addActionListener(this);
			this.bgTendencias.add(rb);
			panelTendencias.add(rb);
		}
		this.revalidate();
		this.repaint();
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		System.out.println("PanelTendenciasEditor - ActionListener" + e.getSource());
		if (e.getSource() == jbtnAnadir) {
			System.out.println("Añadiendo Tendencia");
			
			//Validación
			if (this.jtfIncDecUltimoAnio.getText().isEmpty())
				if (this.jtfIncDecUltimoMes.getText().isEmpty())
					if (this.jtfIncDecUltimos3Meses.getText().isEmpty())
						if (this.jtfIncDecUltimos6Meses.getText().isEmpty()){
							JOptionPane.showMessageDialog(this, "Debe indicar al menos un periodo de variación.", "Error al Registrar Tendencia", JOptionPane.ERROR_MESSAGE);
							return;
						}
			if (!this.cbLicitaciones.isSelected())
				if (!this.cbPatentes.isSelected())
					if (!this.cbDocs.isSelected()){
					JOptionPane.showMessageDialog(this, "Debe seleccionar Patenes y/o Licitaciones y/o Documentos.", "Error al Registrar Tendencia", JOptionPane.ERROR_MESSAGE);
					return;
				}
			
			Tendencia tendencia = new Tendencia();
			tendencia.setTerminoPrincipal(jtfTerminoPrincipal.getText());
			tendencia.setListaTerminosRelacionados(jtfRelacionados.getText());
			tendencia.setIndicadorLicitaciones(cbLicitaciones.isSelected());
			if (cbLicitaciones.isSelected()){
				tendencia.setListaLicitacionSector(dstdLicitacionSector.getSeleccion());
				tendencia.setListaLicitacionLocalizacion(dstdLicitacionLocalizacion.getSeleccion());
				tendencia.setLicitacionTipo((String) jcbLicitacionTipo.getSelectedItem());
				tendencia.setLicitacionEntidadSolicitante(jtfLicitacionEntidadSolicitante.getText());
			}
			tendencia.setIndicadorPatentes(cbPatentes.isSelected());
			if (cbPatentes.isSelected()){
				tendencia.setListaPatenteSector(dstdPatenteSector.getSeleccion());
				tendencia.setListaPatenteLocalizacion(dsldPatenteLocalizacion.getSeleccion());
				tendencia.setPatenteInventor(jtfPatentesInventor.getText());
				tendencia.setPatenteSolicitante(jtfPatentesSolicitante.getText());
			}
			tendencia.setIndicadorDocs(cbDocs.isSelected());
			if (cbDocs.isSelected()){
				tendencia.setListaDocumentoClasificacion(dstdDocumentoClasificacion.getSeleccion());
				tendencia.setDocumentoAutor(jtfDocumentoAutor.getText());
				tendencia.setDocumentoEntidad(jtfDocumentoEntidad.getText());
			}
			
			if (!jtfIncDecUltimoAnio.getText().isEmpty())
				tendencia.setIncUltimoAnio(Double.parseDouble(jtfIncDecUltimoAnio.getText()));
			if (!jtfIncDecUltimoMes.getText().isEmpty())
				tendencia.setIncUltimoMes(Double.parseDouble(jtfIncDecUltimoMes.getText()));
			if (!jtfIncDecUltimos3Meses.getText().isEmpty())
				tendencia.setIncUltimos3Meses(Double.parseDouble(jtfIncDecUltimos3Meses.getText()));
			if (!jtfIncDecUltimos6Meses.getText().isEmpty())
				tendencia.setIncUltimos6Meses(Double.parseDouble(jtfIncDecUltimos6Meses.getText()));
			
			tendencia.establecerFiltrosPrincipales();
			if (tendencia.getFiltroPrincipalPatentes() == null)
				if (tendencia.getIndicadorPatentes())
					tendencia.setFiltroPrincipalPatentes(panelPadre.preguntarFiltroPrincipal(tendencia, "Patentes"));
			if (tendencia.getFiltroPrincipalLicitaciones() == null)
				if(tendencia.getIndicadorLicitaciones())
					tendencia.setFiltroPrincipalLicitaciones(panelPadre.preguntarFiltroPrincipal(tendencia, "Licitaciones"));
			if (tendencia.getFiltroPrincipalDocumentos() == null)
				if(tendencia.getIndicadorDocs())
					tendencia.setFiltroPrincipalLicitaciones(panelPadre.preguntarFiltroPrincipal(tendencia, "Documentos"));
			
			Delphos.getSession().beginTransaction();
			Delphos.getSession().save(tendencia);
			Delphos.getSession().getTransaction().commit();
			limpiar();
			this.cargarTendencias();
			JOptionPane.showMessageDialog(this, "Tendencia añadida correctamente.");
		}
		
		if (e.getSource() == jbtnLimpiar) {
			limpiar();
			//Quitamos la selección si la hay
			bgTendencias.clearSelection();			
			this.jbtnAnadir.setEnabled(true);
		}
		
		if (e.getSource() == jbtnEliminar) {
			Enumeration<AbstractButton> buttons = bgTendencias.getElements();
			while (buttons.hasMoreElements()) {
	            AbstractButton button = buttons.nextElement();
	            if (button.isSelected()) {
	            	RadioButtonTendencia rbt = (RadioButtonTendencia)button;
	            	Delphos.getSession().beginTransaction();
	    			Delphos.getSession().delete(rbt.getTendencia());
	    			Delphos.getSession().getTransaction().commit();
	    			limpiar();
	    			this.cargarTendencias();
	    			JOptionPane.showMessageDialog(this, "Tendencia eliminada correctamente.");
	            }
			}
		}
		if (e.getSource().getClass().equals(RadioButtonTendencia.class)){
			Enumeration<AbstractButton> buttons = bgTendencias.getElements();
			while (buttons.hasMoreElements()) {
	            AbstractButton button = buttons.nextElement();
	            if (button.isSelected()) {
	            	RadioButtonTendencia rbt = (RadioButtonTendencia)button;
	            	Tendencia tendenciaSeleccionada = rbt.getTendencia();
	            	mostrarTendencia(tendenciaSeleccionada);
	            }
			}
			this.jbtnAnadir.setEnabled(false);
		}

		if (e.getSource() == btnLicitacionSectores)
			dstdLicitacionSector.mostrar();

		if (e.getSource() == btnLicitacionLocalizacion)
			dstdLicitacionLocalizacion.mostrar();
		
		if (e.getSource() == btnPatenteLocalizacion)
			dsldPatenteLocalizacion.mostrar();
		
		if (e.getSource() == btnPatenteSectores)
			dstdPatenteSector.mostrar();
		
		if (e.getSource() == btnDocumentoClasificacion)
			dstdDocumentoClasificacion.mostrar();
	}
	
	private void mostrarTendencia(Tendencia tendencia) {
		limpiar();
		if (tendencia.getTerminoPrincipal() != null)
			this.jtfTerminoPrincipal.setText(tendencia.getTerminoPrincipal());
		if (tendencia.getListaTerminosRelacionados() != null)
			this.jtfRelacionados.setText(tendencia.getListaTerminosRelacionados());
		if (tendencia.getIncUltimoAnio() != null)
			this.jtfIncDecUltimoAnio.setText(tendencia.getIncUltimoAnio().toString());
		if (tendencia.getIncUltimoMes() != null)
			this.jtfIncDecUltimoMes.setText(tendencia.getIncUltimoMes().toString());
		if (tendencia.getIncUltimos3Meses() != null)
			this.jtfIncDecUltimos3Meses.setText(tendencia.getIncUltimos3Meses().toString());
		if (tendencia.getIncUltimos6Meses() != null)
			this.jtfIncDecUltimos6Meses.setText(tendencia.getIncUltimos6Meses().toString());
		if (tendencia.getPatenteInventor() != null)
			this.jtfPatentesInventor.setText(tendencia.getPatenteInventor());
		if (tendencia.getPatenteSolicitante() != null)
			this.jtfPatentesSolicitante.setText(tendencia.getPatenteSolicitante());
		if (tendencia.getLicitacionEntidadSolicitante() != null)
			this.jtfLicitacionEntidadSolicitante.setText(tendencia.getLicitacionEntidadSolicitante());
		if (tendencia.getIndicadorLicitaciones() != null)
			this.cbLicitaciones.setSelected(tendencia.getIndicadorLicitaciones());
		if (tendencia.getIndicadorPatentes() != null)
			this.cbPatentes.setSelected(tendencia.getIndicadorPatentes());
		if (tendencia.getIndicadorDocs() != null)
			this.cbDocs.setSelected(tendencia.getIndicadorDocs());
		if (tendencia.getListaPatenteLocalizacion() != null){
			this.dsldPatenteLocalizacion.setSeleccion(tendencia.getListaPatenteLocalizacion());
			this.lblPatenteLocalizacion.setText(dsldPatenteLocalizacion.getTextoSeleccion());
		}
		if (tendencia.getLicitacionTipo()!= null){
			for (int i=0; i< jcbLicitacionTipo.getModel().getSize(); i++)
				if (tendencia.getLicitacionTipo().equals(jcbLicitacionTipo.getModel().getElementAt(i)))
					jcbLicitacionTipo.setSelectedIndex(i);
		}
		if (tendencia.getListaLicitacionLocalizacion() != null){
			this.dstdLicitacionLocalizacion.setSeleccion(tendencia.getListaLicitacionLocalizacion());
			this.lblLicitacionLocalizacion.setText(dstdLicitacionLocalizacion.getTextoSeleccion());
		}
		if (tendencia.getListaLicitacionSector() != null){
			this.dstdLicitacionSector.setSeleccion(tendencia.getListaLicitacionSector());
			this.lblLicitacionSectores.setText(dstdLicitacionSector.getTextoSeleccion());
		}
		if (tendencia.getListaPatenteSector() != null){
			this.dstdPatenteSector.setSeleccion(tendencia.getListaPatenteSector());
			this.lblPatenteSectores.setText(dstdPatenteSector.getTextoSeleccion());
		}
		//TODO:
//		if (tendencia.getListaDocumentoClasificacion() != null){
//			this.dstdDocumentoClasificacion.setSeleccion(tendencia.getListaDocumentoClasificacion());
//			this.lblDocumentoClasificacion.setText(dstdDocumentoClasificacion.getTextoSeleccion());
//		}
	}

	public void limpiar(){
		jtfTerminoPrincipal.setText("");
		jtfRelacionados.setText("");
		jtfIncDecUltimoAnio.setText("");
		jtfIncDecUltimoMes.setText("");
		jtfIncDecUltimos3Meses.setText("");
		jtfIncDecUltimos6Meses.setText("");
		jtfPatentesInventor.setText("");
		jtfPatentesSolicitante.setText("");
		jtfLicitacionEntidadSolicitante.setText("");
		cbLicitaciones.setSelected(false);
		jcbLicitacionTipo.setSelectedIndex(0);
		cbPatentes.setSelected(false);
		cbDocs.setSelected(false);
		dsldPatenteLocalizacion.borrarSeleccion();
		dstdLicitacionLocalizacion.borrarSeleccion();
		dstdLicitacionSector.borrarSeleccion();
		dstdPatenteSector.borrarSeleccion();
		patenteLocalizacion = new HashSet<Patente_Localizacion>();
		licitacionSectores = new HashSet<Licitacion_Sector>();
		licitacionLocalizacion = new HashSet<Licitacion_Localizacion>();
		patenteSectores = new HashSet<Patente_Sector>();
		lblLicitacionLocalizacion.setText("Todos");
		lblLicitacionSectores.setText("Todos");
		lblPatenteLocalizacion.setText("Todos");
		lblPatenteSectores.setText("Todos");
		lblDocumentoClasificacion.setText("Todos");
	}
	
	private DefaultComboBoxModel<String> getLista(String consulta) {
		Session session = Delphos.getSession();
		Query query = session.createSQLQuery(consulta);
		List<String> lista = query.list();
		lista.add(0, null);
		DefaultComboBoxModel<String> model = new DefaultComboBoxModel(lista.toArray(new String[lista.size()]));
		return model;
	}

	public DefaultComboBoxModel<String> getListaTipoLicitacion() {
		return getLista("SELECT DISTINCT(nombre) FROM TipoLicitacion ORDER BY nombre ASC");
	}

	@Override
	public void onAceptar(DelphosSelectionDialog dtd) {
		System.out.println("Aceptar");

		if (dtd == dstdLicitacionSector) {
			licitacionSectores = dtd.getSeleccion();
			lblLicitacionSectores.setText(dtd.getTextoSeleccion());
		}
		
		if (dtd == dstdLicitacionLocalizacion) {
			licitacionLocalizacion = dtd.getSeleccion();
			lblLicitacionLocalizacion.setText(dtd.getTextoSeleccion());
		}
		
		if (dtd == dsldPatenteLocalizacion) {
			patenteLocalizacion = dtd.getSeleccion();
			lblPatenteLocalizacion.setText(dtd.getTextoSeleccion());
		}

		if (dtd == dstdPatenteSector) {
			patenteSectores = dtd.getSeleccion();
			lblPatenteSectores.setText(dtd.getTextoSeleccion());
		}
		
		if (dtd == dstdDocumentoClasificacion) {
			documentoClasificacion = dtd.getSeleccion();
			lblDocumentoClasificacion.setText(dtd.getTextoSeleccion());
		}
	}

	@Override
	public void onCancelar(DelphosSelectionDialog dtd) {

	}

	@Override
	public void onBorrar(DelphosSelectionDialog dtd) {

	}

	@Override
	public void onCrear(DelphosSelectionDialog dtd) {

	}

}
